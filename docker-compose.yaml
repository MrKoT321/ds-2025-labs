services:
  redis:
    container_name: app-redis
    image: redis:8.0-rc1
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - app-network
        
  rankcalculator:
    container_name: rank-calculator
    build:
      context: .
      dockerfile: RankCalculator/Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
        
  eventslogger1:
    container_name: events-logger1
    volumes:
      - events_logger_data:/var/lib/logger
    build:
      context: .
      dockerfile: EventsLogger/Dockerfile
    environment:
      - INSTANCE_ID=logger1
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
        
  eventslogger2:
    container_name: events-logger2
    volumes:
      - events_logger_data:/var/lib/logger
    build:
      context: .
      dockerfile: EventsLogger/Dockerfile
    environment:
      - INSTANCE_ID=logger2
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  webapp1:
    container_name: webapp1
    volumes:
      - redis_data:/root/.aspnet/DataProtection-Keys
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=1234
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  webapp2:
    container_name: webapp2
    volumes:
      - redis_data:/root/.aspnet/DataProtection-Keys
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=1234
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
        
  rabbitmq:
    image: rabbitmq:3.13.7
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - '15672:15672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network 

  nginx:
    container_name: app-nginx
    image: nginx:latest
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - app-network
    depends_on:
      - webapp1
      - webapp2

volumes:
  redis_data:
  rabbitmq_data:
  events_logger_data:

networks:
  app-network:
